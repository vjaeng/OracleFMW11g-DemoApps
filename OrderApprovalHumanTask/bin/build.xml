<?xml version="1.0" encoding="windows-1252" ?>
<!--Ant buildfile generated by Oracle JDeveloper-->
<!--Generated Sep 18, 2008 12:51:30 PM-->
<project name="OrderApprovalHumanTask" default="all" basedir=".">
  <!-- master build.properties -->
  <property file="../../bin/build.properties"/>
  <property file="build.properties"/>
  <property name="wls.home" value="${oracle.home}/../wlserver_10.3"/>
  <!-- weblogic deployer task -->
  <taskdef name="wldeploy" classname="weblogic.ant.taskdefs.management.WLDeploy" 
     classpath="${wls.home}/server/lib/weblogic.jar:${oracle.common.home}/modules/oracle.jps_11.1.1/jps-common.jar:${oracle.common.home}/modules/oracle.jps_11.1.1/jps-api.jar:${oracle.common.home}/modules/oracle.jps_11.1.1/jps-internal.jar"/>
  <property name="humanTask.dc.dir" value="${oracle.home}/soa/modules/oracle.soa.workflow_11.1.1" />
  <property name="humanTask.lib.dir" value="${oracle.home}/soa/modules/oracle.soa.worklist_11.1.1"/>
  
  <target name="init" depends="clean">
    <tstamp/>
    <mkdir dir="${output.dir}"/>
  </target>
  <target name="all" description="Build the project"
          depends="compile,copy"/>
  <target name="clean" description="Clean the project">
    <echo>Cleanup of OrderApprovalHumanTask</echo>
    <delete includeemptydirs="true" quiet="true">
      <fileset dir="${output.dir}" includes="*/**"/>
      <fileset dir="${webinf.dir}/lib" includes="**/*"/>
      <fileset dir="${webinf.dir}/temp" includes="**/*"/>
    </delete>
    <delete file="${deploy.dir}/${war.name}.war"/>
    <delete file="${deploy.dir}/${war.name}.ear"/>
  </target>
  <target name="compile" description="Compile Java source files" depends="init">
    <javac destdir="${output.dir}"
           debug="${javac.debug}" 
           encoding="Cp1252" source="1.6"
           target="1.6">
      
      <src path="../src"/>
    </javac>
  </target>
  <target name="copy" description="Copy all files to output directory"
          depends="init" >
    <patternset id="copy.patterns">
      <include name="**/*.gif"/>
      <include name="**/*.jpg"/>
      <include name="**/*.jpeg"/>
      <include name="**/*.png"/>
      <include name="**/*.properties"/>
      <include name="**/*.xml"/>
      <include name="**/*-apf.xml"/>
      <include name="**/*.ejx"/>
      <include name="**/*.xcfg"/>
      <include name="**/*.cpx"/>
      <include name="**/*.dcx"/>
      <include name="**/*.sva"/>
      <include name="**/*.ini"/>
      <include name="**/*.tld"/>
      <include name="**/*.tag"/>
      <include name="**/*.xlf"/>
      <include name="**/*.wsdl"/>
      <include name="**/*.xsd"/>
    </patternset>
    <copy todir="${output.dir}">
      <fileset dir="../adfmsrc">
        <patternset refid="copy.patterns"/>
      </fileset>
      <fileset dir="../adfmsrc" includes="*.*"/>
      <fileset dir="..">
        <include name="services/**"/>
      </fileset>
    </copy>
  </target>

  <target name="create-ear" depends="compile, copy"
    description="Create the deployable ear archive, including amending connections.xml">
    <mkdir dir="${deploy.dir}"/>
    <property name="tmp.adf.dir" value="${deploy.dir}/adf"/>
    <property name="tmp.adfmeta.dir" value="${tmp.adf.dir}/META-INF"/>
    
    <copy todir="${webinf.dir}/lib">
        <fileset dir="${humanTask.lib.dir}" includes="adflibWorklistComponents.jar"/>
        <fileset dir="${humanTask.dc.dir}" includes="bpm-workflow-datacontrol.jar"/>
        <!--fileset dir="${oracle.home}/jlib" includes="inspect4.jar"/-->
        
        <fileset dir="${oracle.common.home}/modules/oracle.javatools_11.1.1" includes="resourcebundle.jar"/>
        <fileset dir="${oracle.common.home}/modules/oracle.bali.share_11.1.1" includes="share.jar"/>
    </copy>
        
    <war basedir="${web.dir}" destfile="${deploy.dir}/${war.name}.war"
        webxml="${webinf.dir}/web.xml">
        <include name="*/**"/>
    </war>
    <delete dir="${webinf.dir}/lib" includeemptydirs="true" includes="*/**"/>
    <delete dir="${webinf.dir}/lib"/>

    <antcall target="setupDeploymentEnvironment" inheritall="true"/>
    
    <mkdir dir="${tmp.adfmeta.dir}"/>
    <copy todir="${tmp.adfmeta.dir}">
        <fileset dir="../../.adf/META-INF">
            <include name="*/**"/>
        </fileset>
    </copy>
    <echo>Creating custom adf config for customization of connections.xml - datasource: ${mds.local.datasource.jndi} </echo>
    <echo file="${tmp.adfmeta.dir}/adf-config.xml">&lt;?xml version="1.0" encoding="windows-1252" ?>
        &lt;adf-config xmlns="http://xmlns.oracle.com/adf/config">
          &lt;adf:adf-properties-child xmlns:adf="http://xmlns.oracle.com/adf/config/properties">
            &lt;adf-property name="adfAppUID" value="OrderApprovalHumanTask"/>
          &lt;/adf:adf-properties-child>
          &lt;adf-mds-config xmlns="http://xmlns.oracle.com/adf/mds/config">
            &lt;mds-config xmlns="http://xmlns.oracle.com/mds/config">
              &lt;persistence-config>
                &lt;metadata-namespaces>
                &lt;/metadata-namespaces>
                &lt;metadata-store-usages>
                 &lt;metadata-store-usage id="soa-infra-store" deploy-target="true" default-cust-store="true">
                    &lt;metadata-store class-name="oracle.mds.persistence.stores.db.DBMetadataStore">
                     &lt;property value="OrderApprovalHumanTask" name="partition-name"/>
                     &lt;property value="${mds.local.datasource.jndi}" name="jndi-datasource"/>
                    &lt;/metadata-store>
                  &lt;/metadata-store-usage>
                &lt;/metadata-store-usages>
              &lt;/persistence-config>
            &lt;/mds-config>
          &lt;/adf-mds-config>
        &lt;/adf-config> 
    </echo>
        
    <property name="tmp.ear.lib" value="${deploy.dir}/lib"/>
    <mkdir dir="${tmp.ear.lib}"/>

    <copy file="../lib/adf-loc.jar" todir="${tmp.ear.lib}"/>

    <ear basedir="${deploy.dir}" appxml="../../src/META-INF/application.xml"
        destfile="${deploy.dir}/${war.name}.ear">
        <include name="${war.name}.war"/>
        <include name="adf/**"/>
        <include name="lib/*"/>
        <fileset dir="../../src">
            <include name="*/**"/>
            <exclude name="META-INF/application.xml"/>
        </fileset>
    </ear>
    <delete dir="${tmp.adfmeta.dir}" includeemptydirs="true" includes="*/**"/>
    <delete dir="${tmp.adf.dir}" includeemptydirs="true" />
    
    <delete dir="${tmp.ear.lib}" includeemptydirs="true" includes="*/**"/>
    <delete dir="${tmp.ear.lib}"/>
  </target>
  
  <!-- us wldeploy to deploy the thing -->
  <target name="deploy-application" unless="skip.humanTask"
    description="Deploy the OrderApprovalHumanTask ear to the server">
    <wldeploy action="deploy" name="${war.name}" 
      source="${deploy.dir}/${war.name}.ear" library="false"
      user="${server.user}" password="${server.password}"
      verbose="false" adminurl="${wls.url}"
      remote="true" upload="true"
      targets="${server.targets}" />
  </target>
  
  <!-- undeploy application -->
  <target name="undeploy-application" description="undeploy the app from the server">
    <wldeploy action="undeploy" name="${war.name}" 
      user="${server.user}" password="${server.password}"
      adminurl="${wls.url}"
      remote="true" targets="${server.targets}" />
  </target>  
  
  <!-- setup of connections.xml -->
  <target name="setupDeploymentEnvironment">
    <property name="connections.xml" value="../../.adf/META-INF/connections.xml"/>
    <property name="connections.xml.seed" value="./templates/connections.xml.seed"/>
    <echo>Step1: copy template ${connections.xml.seed} to ${connections.xml}</echo>
    <copy file="${connections.xml.seed}" tofile="${connections.xml}" overwrite="true"/>
    
    <echo>Step2: setup descriptor, soa-only? ${soa.only.deployment}, modifying ${connections.xml} </echo>
    <!-- adf deployment -->
    <property name="storefrontservice.http.endpoint" 
        value="${managed.server.host}:${managed.server.port}"/>

    <condition property="storefrontservice.contextUri" 
        else="${storefrontservice.contextUri.soa}"
        value="${storefrontservice.contextUri.adf}">
          <equals arg1="${soa.only.deployment}" arg2="false" />
    </condition>
    <condition property="storefrontservice.ws.binding" 
        else="${storefrontservice.ws.binding.soa}"
        value="${storefrontservice.ws.binding.adf}">
          <equals arg1="${soa.only.deployment}" arg2="false" />
    </condition>

    <echo message="replacing ws-endpoint with ${storefrontservice.http.endpoint}/${storefrontservice.contextUri}"/>    
    <replace file="${connections.xml}" 
        token="@endpoint@" value="http://${storefrontservice.http.endpoint}/${storefrontservice.contextUri}"/>

    <echo message="replacing ws-binding with ${storefrontservice.ws.binding}"/>    
    <replace file="${connections.xml}" 
        token="@binding@" value="${storefrontservice.ws.binding}"/>  
  </target>

</project>
