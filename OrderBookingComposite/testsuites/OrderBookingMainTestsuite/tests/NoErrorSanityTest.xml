<?xml version="1.0" encoding="UTF-8" ?>
<!-- Generated by Oracle SCA Test Modeler version 1.0 at [10/1/09 5:51 PM]. -->
<compositeTest compositeDN="OrderBookingComposite" xmlns="http://xmlns.oracle.com/sca/2006/test">
  <about/>
  <initiate serviceName="orderprocessor_client_ep" operation="process" isAsync="true">
    <message>
      <part partName="payload">
        <content>
          <process xmlns="http://www.globalcompany.example.com/ns/OrderBookingService">
            <orderId>1000</orderId>
          </process>
        </content>
      </part>
    </message>
  </initiate>
  <wireActions wireSource="OrderProcessor/PartnerSupplierMediator" operation="execute">
    <assert comparisonMethod="string">
      <description>the callback will return the exact amount that was sent in</description>
      <expected>
        <location key="output" callbackOperation="callback" partName="callback" xpath="/ns1:WarehouseResponse/ns1:orderTotal" xmlns:ns1="http://www.globalcompany.example.com/ns/InternalWarehouse"/>
        <simple>1999</simple>
      </expected>
    </assert>
  </wireActions>
  <wireActions wireSource="OrderProcessor/InternalWarehouseService" operation="process">
    <assert comparisonMethod="string">
      <description>make sure that the orderid the process was started with is the same here</description>
      <expected>
        <location key="input" partName="payload" xpath="/ns1:WarehouseRequest/ns1:orderId" xmlns:ns1="http://www.globalcompany.example.com/ns/InternalWarehouse"/>
        <simple>1000</simple>
      </expected>
    </assert>
    <assert comparisonMethod="string">
      <description>this one returns a price of 1000 fixed</description>
      <expected>
        <location key="output" callbackOperation="processResponse" partName="payload" xpath="/ns1:WarehouseResponse/ns1:orderTotal" xmlns:ns1="http://www.globalcompany.example.com/ns/InternalWarehouse"/>
        <simple>1000</simple>
      </expected>
    </assert>
  </wireActions>
  <wireActions wireSource="OrderProcessor/RequiresApprovalRule_OracleRules1_DecisionService_1" operation="callFunctionStateless">
    <assert comparisonMethod="string">
      <description>in this case the approval limit is not reached, hence no approval required</description>
      <expected>
        <location key="output" partName="payload" xpath="/tns:callFunctionStatelessDecision/tns:resultList/ns1:approve/ns1:approvalRequired" xmlns:ns1="http://www.globalcompany.example.com/ns/OrderBookingService/rules" xmlns:tns="http://xmlns.oracle.com/RequiresApprovalRule/OracleRules1_DecisionService_1"/>
        <simple>false</simple>
      </expected>
    </assert>
  </wireActions>
  <wireActions wireSource="OrderProcessor/EvaluatePreferredSupplierRule.OracleRules1_DecisionService_1" operation="callFunctionStateless">
    <assert comparisonMethod="string">
      <description>this rule takes the cheaper of both quotes</description>
      <expected>
        <location key="output" partName="payload" xpath="/tns:callFunctionStatelessDecision/tns:resultList/ns1:WarehouseResponse/ns1:orderTotal" xmlns:ns1="http://www.globalcompany.example.com/ns/InternalWarehouse" xmlns:tns="http://xmlns.oracle.com/EvaluatePreferredSupplierRule/OracleRules1_DecisionService_1"/>
        <simple>1000.0</simple>
      </expected>
    </assert>
  </wireActions>
  <wireActions wireSource="OrderProcessor/CreditCardAuthorizationService" operation="AuthorizeCredit">
    <assert comparisonMethod="string">
      <description>in this case the creditcardnumber will be approved</description>
      <expected>
        <location key="output" partName="status" xpath="/types:status" xmlns:types="http://www.globalcompany.example.com/ns/CCAuthorizationService"/>
        <simple>APPROVED</simple>
      </expected>
    </assert>
  </wireActions>
</compositeTest>
